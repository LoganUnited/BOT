from telegram import Update
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    filters,
    CommandHandler,
    CallbackQueryHandler
)
from utils.logger import setup_logger
from typing import Dict, Any

# –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
from bot.commands.move import get_move_handlers
from bot.commands.shop import get_shop_handlers
from bot.commands.transport import get_transport_handlers
from bot.commands.profile import get_profile_handlers
from bot.commands.combat import get_combat_handlers

logger = setup_logger()

# –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
WAIT_NICKNAME = 1

def get_game():
    from game.core import game
    return game

class HandlersManager:
    def __init__(self):
        self.command_handlers = self._initialize_handlers()
        self.game = get_game()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º game –∑–¥–µ—Å—å

    def _initialize_handlers(self) -> list:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        return [
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            self._create_registration_handler(),
            CommandHandler("help", self.help_command),
            
            # –ù–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã: –ª–æ–∫–∞—Ü–∏–∏, –º–∞–≥–∞–∑–∏–Ω—ã, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
            *get_move_handlers(),
            *get_shop_handlers(),
            *get_transport_handlers(),
            
            # –û—Å–Ω–æ–≤–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
            *get_profile_handlers(),
            *get_combat_handlers(),
        ]

    def _create_registration_handler(self) -> ConversationHandler:
        """–°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        return ConversationHandler(
            entry_points=[CommandHandler("start", self.start)],
            states={
                WAIT_NICKNAME: [
                    MessageHandler(
                        filters.TEXT & ~filters.COMMAND,
                        self.register_player
                    )
                ]
            },
            fallbacks=[
                CommandHandler("cancel", self.cancel_registration),
                CallbackQueryHandler(self.cancel_registration)
            ],
            allow_reentry=True
        )

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        try:
            if self.game.player_exists(user.id):
                await update.message.reply_text(
                    f"–ü—Ä–∏–≤–µ—Ç, {user.username or '–∏–≥—Ä–æ–∫'}! –¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ!",
                    reply_markup=self._main_menu_markup()
                )
                return ConversationHandler.END
            
            await update.message.reply_text(
                "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!\n"
                "–í–≤–µ–¥–∏ –Ω–∏–∫–Ω–µ–π–º (–æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤):",
                reply_markup=self._cancel_markup()
            )
            return WAIT_NICKNAME
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ start: {str(e)}")
            await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return ConversationHandler.END

    async def register_player(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞"""
        user = update.effective_user
        nickname = update.message.text.strip()
        
        try:
            if not 2 <= len(nickname) <= 20:
                await update.message.reply_text(
                    "‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤!",
                    reply_markup=self._cancel_markup()
                )
                return WAIT_NICKNAME
            
            if not nickname.isalnum():
                await update.message.reply_text(
                    "‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã!",
                    reply_markup=self._cancel_markup()
                )
                return WAIT_NICKNAME
            
            if self.game.register_player(user.id, nickname):
                await update.message.reply_text(
                    f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, {nickname}!\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.",
                    reply_markup=self._main_menu_markup()
                )
            else:
                await update.message.reply_text(
                    "‚ùå –≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π:",
                    reply_markup=self._cancel_markup()
                )
                return WAIT_NICKNAME
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        return ConversationHandler.END

    async def cancel_registration(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        await update.message.reply_text(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–∞–∂–º–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
            reply_markup=self._main_menu_markup()
        )
        return ConversationHandler.END

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        try:
            await update.message.reply_text(
                "‚ÑπÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                "/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
                "/profile - –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞\n"
                "/inventory - –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
                "/shops - –ü–æ–∫–∞–∑–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã\n"
                "/move - –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å—Å—è –≤ –¥—Ä—É–≥—É—é –ª–æ–∫–∞—Ü–∏—é\n"
                "/transport - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º\n"
                "/fight - –ù–∞—á–∞—Ç—å –±–æ–π\n"
                "/help - –ü–æ–º–æ—â—å\n\n"
                "üîÑ –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!",
                parse_mode="HTML"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ help_command: {str(e)}")

    def _main_menu_markup(self) -> Dict[str, Any]:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        return {
            "keyboard": [
                ["–ü—Ä–æ—Ñ–∏–ª—å", "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"],
                ["–ú–∞–≥–∞–∑–∏–Ω—ã", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"],
                ["–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å—Å—è"],
                ["–ë–æ–π", "–ü–æ–º–æ—â—å"]
            ],
            "resize_keyboard": True
        }

    def _cancel_markup(self) -> Dict[str, Any]:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã"""
        return {
            "keyboard": [["–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"]],
            "resize_keyboard": True
        }

    def get_all_handlers(self) -> list:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"""
        return self.command_handlers