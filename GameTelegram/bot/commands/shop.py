from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
from game.core import game  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç –µ—Å—Ç—å

async def shop_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏"""
    player = game.get_player(update.effective_user.id)
    loc = game.world_map.locations[player.location]
    sub_loc = loc.sub_locations.get(player.sub_location)
    
    if not sub_loc or not sub_loc.shops:
        await update.message.reply_text("–ó–¥–µ—Å—å –Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤!")
        return
    
    keyboard = [
        [InlineKeyboardButton(
            f"{shop.name} ({shop.shop_type})", 
            callback_data=f"shop_{shop.id}")]
        for shop in sub_loc.shops.values()
    ]
    
    await update.message.reply_text(
        "–ú–∞–≥–∞–∑–∏–Ω—ã:",
        reply_markup=InlineKeyboardMarkup(keyboard))

async def shop_details(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –µ–≥–æ —Ç–æ–≤–∞—Ä—ã"""
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –º–∞–≥–∞–∑–∏–Ω–∞ –∏–∑ callback_data (—Ñ–æ—Ä–º–∞—Ç "shop_<id>")
    shop_id = query.data.split("_")[1]
    
    player = game.get_player(query.from_user.id)
    loc = game.world_map.locations[player.location]
    sub_loc = loc.sub_locations.get(player.sub_location)
    
    if not sub_loc or not sub_loc.shops:
        await query.edit_message_text("–ú–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    shop = sub_loc.shops.get(shop_id)
    if not shop:
        await query.edit_message_text("–ú–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    items_text = "\n".join(
        f"- {item.name}: {item.price}üí∞" 
        for item in shop.items.values()
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
    buy_buttons = [
        [InlineKeyboardButton(
            f"–ö—É–ø–∏—Ç—å {item.name} - {item.price}üí∞", 
            callback_data=f"buy_{shop_id}_{item.id}")]
        for item in shop.items.values()
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_button = [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥ –∫ –º–∞–≥–∞–∑–∏–Ω–∞–º", callback_data="back_to_shops")]]
    
    await query.edit_message_text(
        f"üè™ *{shop.name}*\n\n*–¢–æ–≤–∞—Ä—ã:*\n{items_text}",
        parse_mode="Markdown",
        reply_markup=InlineKeyboardMarkup(buy_buttons + back_button))

async def buy_item(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞"""
    query = update.callback_query
    await query.answer()
    
    # –§–æ—Ä–º–∞—Ç callback_data: "buy_<shop_id>_<item_id>"
    _, shop_id, item_id = query.data.split("_")
    
    player = game.get_player(query.from_user.id)
    loc = game.world_map.locations[player.location]
    sub_loc = loc.sub_locations.get(player.sub_location)
    
    if not sub_loc or not sub_loc.shops:
        await query.edit_message_text("–û—à–∏–±–∫–∞: –º–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    shop = sub_loc.shops.get(shop_id)
    if not shop:
        await query.edit_message_text("–û—à–∏–±–∫–∞: –º–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    item = shop.items.get(item_id)
    if not item:
        await query.edit_message_text("–û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –¥–µ–Ω–µ–≥
    if player.money < item.price:
        await query.edit_message_text(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥! –ù—É–∂–Ω–æ {item.price}üí∞")
        return
    
    # –°–æ–≤–µ—Ä—à–∞–µ–º –ø–æ–∫—É–ø–∫—É
    game.update_money(player.id, -item.price)  # –°–Ω–∏–º–∞–µ–º –¥–µ–Ω—å–≥–∏
    game.add_item_to_inventory(player.id, item.id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç
    
    await query.edit_message_text(f"‚úÖ –í—ã –∫—É–ø–∏–ª–∏ {item.name} –∑–∞ {item.price}üí∞!")

async def back_to_shops(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    query = update.callback_query
    await query.answer()
    await shop_command(update, context)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /shops

def get_shop_handlers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    return [
        CommandHandler("shops", shop_command),
        CallbackQueryHandler(shop_details, pattern="^shop_"),
        CallbackQueryHandler(buy_item, pattern="^buy_"),
        CallbackQueryHandler(back_to_shops, pattern="^back_to_shops$")
    ]